(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[0],{16:function(e,t,n){},17:function(e,t,n){},19:function(e,t,n){"use strict";n.r(t);var o=n(3),s=n.n(o),i=n(9),r=n.n(i),a=(n(16),n(4)),c=(n(17),n(0)),l=n(5),g=n(6),h=n(11),d=n(10),u=n(1),v=function(e){Object(h.a)(n,e);var t=Object(d.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(g.a)(n,[{key:"jsontoPolygon",value:function(e){var t,n=[],o=Object(c.a)(e.polygons);try{for(o.s();!(t=o.n()).done;){var s,i=t.value,r=[],a=Object(c.a)(i);try{for(a.s();!(s=a.n()).done;){var l=s.value,g=e.edges[l][0],h=e.vertices[g][0],d=e.vertices[g][1];r.push(h+","+d)}}catch(u){a.e(u)}finally{a.f()}n.push(r.join(" "))}}catch(u){o.e(u)}finally{o.f()}return n}},{key:"scaleViewBox",value:function(e){var t,n=1/0,o=-1/0,s=1/0,i=-1/0,r=Object(c.a)(e.polygons);try{for(r.s();!(t=r.n()).done;){var a,l=t.value,g=Object(c.a)(l);try{for(g.s();!(a=g.n()).done;){var h=a.value,d=e.edges[h][0],u=e.vertices[d];u[0]<n&&(n=u[0]),u[0]>o&&(o=u[0]),u[1]<s&&(s=u[1]),u[1]>i&&(i=u[1])}}catch(v){g.e(v)}finally{g.f()}}}catch(v){r.e(v)}finally{r.f()}return[n,s,o-n,i-s]}},{key:"createPolygons",value:function(e){for(var t=this.jsontoPolygon(e),n=[],o=0;o<t.length;o++){var s="polygon"+o.toString(),i="#"+((1<<24)*Math.random()|0).toString(16),r="P"+o.toString();n.push(Object(u.jsx)("polygon",{className:"Polygons",id:r,fill:i,points:t[o]},s))}return n}},{key:"render",value:function(){var e=this.scaleViewBox(this.props.data);return Object(u.jsx)("div",{className:"Graph-drawing",children:Object(u.jsx)("svg",{className:"SVG",viewBox:"".concat(e[0]," ").concat(e[1]," ").concat(e[2]," ").concat(e[3]),children:this.createPolygons(this.props.data)})})}}]),n}(o.Component);function y(e,t){return e.concat(t)}var f=function(){function e(t,n){Object(l.a)(this,e),this.name="",this.x=void 0,this.y=void 0,this.edgeStar=[],this.x=t,this.y=n}return Object(g.a)(e,[{key:"orderEdgeStar",value:function(){this.edgeStar.sort((function(e,t){return e.angleOffAxis-t.angleOffAxis}))}},{key:"getNextEdgeFromStar",value:function(e){var t=e.twin,n=this.edgeStar.indexOf(t)+1;return n>=this.edgeStar.length&&(n=0),this.edgeStar[n]}}]),e}(),p=function(){function e(t,n){Object(l.a)(this,e),this.name="",this.startVertex=void 0,this.endVertex=void 0,this.twin=void 0,this.angleOffAxis=void 0,this.polygon=void 0,this.startVertex=t,this.endVertex=n,this.angleOffAxis=function(e){var t=e.getVector(),n=Object(a.a)(t,2),o=n[0],s=n[1];return Math.atan2(s,o)}(this)}return Object(g.a)(e,[{key:"getVector",value:function(){var e=this.startVertex.x,t=this.startVertex.y;return[this.endVertex.x-e,this.endVertex.y-t]}}]),e}(),x=function(){function e(){Object(l.a)(this,e),this.name="",this.edges=[]}return Object(g.a)(e,[{key:"pathIsClockwise",value:function(){var e,t=0,n=Object(c.a)(this.edges);try{for(n.s();!(e=n.n()).done;){var o=e.value,s=o.startVertex,i=o.endVertex;t+=(i.x-s.x)*(i.y+s.y)}}catch(r){n.e(r)}finally{n.f()}return t>0}}]),e}(),O=function(){function e(){Object(l.a)(this,e),this.vertices=[],this.edges=[],this.polygons=[]}return Object(g.a)(e,[{key:"addEdgeTwins",value:function(e,t){var n=new p(e,t),o=new p(t,e);n.name="e"+this.edges.length.toString(),o.name="e"+(this.edges.length+1).toString(),n.twin=o,o.twin=n,this.edges.push(n),this.edges.push(o),e.edgeStar.push(n),t.edgeStar.push(o)}},{key:"fromVerticiesEdges",value:function(e,t){var n,o=Object(c.a)(e);try{for(o.s();!(n=o.n()).done;){var s=Object(a.a)(n.value,2),i=s[0],r=s[1],l=new f(i,r);l.name="v"+this.vertices.length.toString(),this.vertices.push(l)}}catch(E){o.e(E)}finally{o.f()}var g,h=Object(c.a)(t);try{for(h.s();!(g=h.n()).done;){var d=Object(a.a)(g.value,2),u=d[0],v=d[1],y=this.vertices[u],p=this.vertices[v];this.addEdgeTwins(y,p)}}catch(E){h.e(E)}finally{h.f()}var O,b=Object(c.a)(this.vertices);try{for(b.s();!(O=b.n()).done;){O.value.orderEdgeStar()}}catch(E){b.e(E)}finally{b.f()}var j,m=new Set,P=Object(c.a)(this.edges);try{for(P.s();!(j=P.n()).done;){var S=j.value;if(!m.has(S)){var w=S;m.add(w);var V=S.startVertex,N=new x;for(N.edges.push(S);V!==w.endVertex;){var k=w.endVertex.getNextEdgeFromStar(w);if(m.has(k))break;m.add(k),N.edges.push(k),w=k}if(N.pathIsClockwise()){N.name="p"+this.polygons.length.toString(),this.polygons.push(N);var T,I=Object(c.a)(N.edges);try{for(I.s();!(T=I.n()).done;){T.value.polygon=N}}catch(E){I.e(E)}finally{I.f()}}}}}catch(E){P.e(E)}finally{P.f()}}},{key:"fromVerticiesEdgesPolygons",value:function(e,t,n){var o,s=Object(c.a)(e);try{for(s.s();!(o=s.n()).done;){var i=Object(a.a)(o.value,2),r=i[0],l=i[1],g=new f(r,l);g.name="v"+this.vertices.length.toString(),this.vertices.push(g)}}catch(E){s.e(E)}finally{s.f()}for(var h=0;h<t.length;h+=2){var d=Object(a.a)(t[h],2),u=d[0],v=d[1],y=this.vertices[u],p=this.vertices[v];this.addEdgeTwins(y,p)}var O,b=Object(c.a)(this.vertices);try{for(b.s();!(O=b.n()).done;){O.value.orderEdgeStar()}}catch(E){b.e(E)}finally{b.f()}var j,m=Object(c.a)(n);try{for(m.s();!(j=m.n()).done;){var P,S=j.value,w=new x,V=Object(c.a)(S);try{for(V.s();!(P=V.n()).done;){var N=P.value,k=this.edges[N];w.edges.push(k)}}catch(E){V.e(E)}finally{V.f()}w.name="p"+this.polygons.length.toString(),this.polygons.push(w);var T,I=Object(c.a)(w.edges);try{for(I.s();!(T=I.n()).done;){T.value.polygon=w}}catch(E){I.e(E)}finally{I.f()}}}catch(E){m.e(E)}finally{m.f()}}},{key:"toJSON",value:function(){var e,t=[],n=Object(c.a)(this.vertices);try{for(n.s();!(e=n.n()).done;){var o=e.value,s=o.x,i=o.y;t.push([s,i])}}catch(m){n.e(m)}finally{n.f()}var r,a=[],l=Object(c.a)(this.edges);try{for(l.s();!(r=l.n()).done;){var g=r.value,h=this.vertices.indexOf(g.startVertex),d=this.vertices.indexOf(g.endVertex);a.push([h,d])}}catch(m){l.e(m)}finally{l.f()}var u,v=[],y=Object(c.a)(this.polygons);try{for(y.s();!(u=y.n()).done;){var f,p=u.value,x=[],O=Object(c.a)(p.edges);try{for(O.s();!(f=O.n()).done;){var b=f.value,j=this.edges.indexOf(b);x.push(j)}}catch(m){O.e(m)}finally{O.f()}v.push(x)}}catch(m){y.e(m)}finally{y.f()}return{vertices:t,edges:a,polygons:v}}},{key:"findPolygonNeighbors",value:function(e){var t,n=[],o=Object(c.a)(e.edges);try{for(o.s();!(t=o.n()).done;){var s=t.value;if(void 0!==s.twin.polygon){var i=s.twin.polygon;n.push(i)}}}catch(r){o.e(r)}finally{o.f()}return n}},{key:"findPolygonNeighborLayers",value:function(e){var t=[[]];t[0].push(e.name);for(var n=new Set,o=[e],s=1;o.length>0;){var i=o.length;t.push([]);for(var r=0;r<i;r++){var a,l="",g=Object(c.a)(o);try{for(g.s();!(a=g.n()).done;){l=y(l,a.value.name)}}catch(p){g.e(p)}finally{g.f()}var h=o[0];o.splice(0,1),n.add(h);var d,u=this.findPolygonNeighbors(h),v=Object(c.a)(u);try{for(v.s();!(d=v.n()).done;){var f=d.value;n.has(f)||(t[s].push(f.name),n.add(f),o.push(f))}}catch(p){v.e(p)}finally{v.f()}}s+=1}return t.splice(t.length-1,1),t}},{key:"checkOutsideInputs",value:function(){}}]),e}();function b(e,t,n){var o=(e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x);return o>0?0:o<0?1:2}function j(e,t,n){var o=n.x<=Math.max(e.x,t.x),s=n.x>=Math.min(e.x,t.x),i=n.y<=Math.max(e.y,t.y),r=n.y>=Math.min(e.y,t.y);return!!(o&&s&&i&&r)}function m(e,t){return 0!==function(e,t){var n,o=0,s=Object(c.a)(e.edges);try{for(s.s();!(n=s.n()).done;){var i=n.value,r={x:i.startVertex.x,y:i.startVertex.y},a={x:i.endVertex.x,y:i.endVertex.y},l=b(r,t,a);if(r.x<=t.x&&t.x<a.x&&0===l&&(o+=1),a.x<=t.x&&t.x<r.x&&1===l&&(o-=1),2===l&&j(r,a,t)){o=0;break}}}catch(g){s.e(g)}finally{s.f()}return o}(e,t)}var P=n(2);var S=function(){var e=s.a.useState("0"),t=Object(a.a)(e,2),n=t[0],o=t[1],i=+n,r={vertices:P[i].vertices,edges:P[i].edges},l=P[i].description,g=P[i].neighborOrigin,h=[P[i].pointInPolygon[0],P[i].pointInPolygon[1]],d=function(e){console.log("algorithm 1");var t=new O,n=e;t.fromVerticiesEdges(n.vertices,n.edges);var o=t.toJSON();return console.log(o),o}(r),f=function(e,t){console.log("algorithm 2");var n=new O;n.fromVerticiesEdgesPolygons(e.vertices,e.edges,e.polygons);var o=t;o>=n.polygons.length&&(o=0);var s=n.polygons[o],i=n.findPolygonNeighbors(s).map((function(e){return e.name}));return console.log("Polygon "+o+" neighbors are "+i.join(", ")),[o,i]}(d,g),p=function(e,t){console.log("algorithm 3");var n=new O;n.fromVerticiesEdgesPolygons(e.vertices,e.edges,e.polygons);var o,s={x:t[0],y:t[1]},i=void 0,r=Object(c.a)(n.polygons);try{for(r.s();!(o=r.n()).done;){var a=o.value;if(m(a,s)){i=a;break}}}catch(l){r.e(l)}finally{r.f()}return void 0!==i?(console.log("Point ["+s.x+","+s.y+"] is in "+i.name),i.name):(console.log("Point ["+s.x+","+s.y+"] is in no polygon"),"no polygons")}(d,h),x=function(e,t){console.log("algorithm 4");var n=new O;n.fromVerticiesEdgesPolygons(e.vertices,e.edges,e.polygons);var o=t;o>=n.polygons.length&&(o=0);var s=n.polygons[o],i=n.findPolygonNeighborLayers(s);return console.log(i),JSON.stringify(i)}(d,g),b=y("Description: ",l),j="algorithm 1: found "+d.polygons.length.toString()+" polygons",S="algorithm 2: Polygon "+f[0]+" neighbors- "+f[1],w="algorithm 3: Point ["+h[0]+","+h[1]+"] is in "+p,V="algorithm 4: "+x;return Object(u.jsxs)("div",{className:"App",children:[Object(u.jsx)(v,{data:d}),Object(u.jsxs)("div",{className:"Input-Output",children:[Object(u.jsx)("div",{className:"Input-data",children:Object(u.jsx)("select",{id:"dropdown",onChange:function(e){return function(e){o(e),console.log("Updated graph")}(e.target.value)},value:n,children:function(){for(var e=[],t=0;t<P.length;t++){var n=P[t].title,o="option"+t.toString();e.push(Object(u.jsx)("option",{value:t,children:n},o))}return e}()})}),Object(u.jsxs)("div",{className:"Output-data",children:[Object(u.jsx)("div",{className:"TestCaseOutputText",children:b}),Object(u.jsx)("div",{className:"TestCaseOutputText",children:j}),Object(u.jsx)("div",{className:"TestCaseOutputText",children:S}),Object(u.jsx)("div",{className:"TestCaseOutputText",children:w}),Object(u.jsx)("div",{className:"TestCaseOutputText",children:V})]})]})]})},w=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,20)).then((function(t){var n=t.getCLS,o=t.getFID,s=t.getFCP,i=t.getLCP,r=t.getTTFB;n(e),o(e),s(e),i(e),r(e)}))};r.a.render(Object(u.jsx)(s.a.StrictMode,{children:Object(u.jsx)(S,{})}),document.getElementById("root")),w()},2:function(e){e.exports=JSON.parse('[{"title":"testcase1","description":"Given test case. includes two shapes and should exclude the outer shape","vertices":[[0,0],[2,0],[2,2],[0,2]],"edges":[[0,1],[1,2],[0,2],[0,3],[2,3]],"neighborOrigin":0,"pointInPolygon":[0.5,0.1]},{"title":"testcase2","description":"This has polygon shape variety and has a spur to the outside. This case checks that spurs are not included in polygons","vertices":[[1,2],[3,2],[3,3],[5,3],[5,1],[4,1],[2,1]],"edges":[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,1],[5,1]],"neighborOrigin":0,"pointInPolygon":[4,2]},{"title":"testcase3","description":"5X5 grid of squares to get an understanding of layers. The neighbor origin, polygon 8 is on the inside of overall polygons. And point is in a polygon","vertices":[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5]],"edges":[[0,1],[1,2],[2,3],[3,4],[4,5],[6,7],[7,8],[8,9],[9,10],[10,11],[12,13],[13,14],[14,15],[15,16],[16,17],[18,19],[19,20],[20,21],[21,22],[22,23],[24,25],[25,26],[26,27],[27,28],[28,29],[30,31],[31,32],[32,33],[33,34],[34,35],[0,6],[6,12],[12,18],[18,24],[24,30],[1,7],[7,13],[13,19],[19,25],[25,31],[2,8],[8,14],[14,20],[20,26],[26,32],[3,9],[9,15],[15,21],[21,27],[27,33],[4,10],[10,16],[16,22],[22,28],[28,34],[5,11],[11,17],[17,23],[23,29],[29,35]],"neighborOrigin":8,"pointInPolygon":[2.5,3.5]},{"title":"testcase4","description":"5X5 grid of squares to get an understanding of layers. The neighbor origin, polygon 1 is on outer edge of polygons. And point is on a polygon edge, so not in any polygon","vertices":[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5]],"edges":[[0,1],[1,2],[2,3],[3,4],[4,5],[6,7],[7,8],[8,9],[9,10],[10,11],[12,13],[13,14],[14,15],[15,16],[16,17],[18,19],[19,20],[20,21],[21,22],[22,23],[24,25],[25,26],[26,27],[27,28],[28,29],[30,31],[31,32],[32,33],[33,34],[34,35],[0,6],[6,12],[12,18],[18,24],[24,30],[1,7],[7,13],[13,19],[19,25],[25,31],[2,8],[8,14],[14,20],[20,26],[26,32],[3,9],[9,15],[15,21],[21,27],[27,33],[4,10],[10,16],[16,22],[22,28],[28,34],[5,11],[11,17],[17,23],[23,29],[29,35]],"neighborOrigin":1,"pointInPolygon":[2,3]},{"title":"testcase5","description":"Non-convex shape to test point in polygon. Point is outside polygon, in concave area","vertices":[[1,0],[1,1],[3,2],[3,4],[0,5],[0,7],[4,7],[4,0]],"edges":[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,0]],"neighborOrigin":0,"pointInPolygon":[2,2]},{"title":"testcase6","description":"Non-convex shape to test point in polygon. Point is on the polygon edge, so should be returned as outside the polygon","vertices":[[1,0],[1,1],[3,2],[3,4],[0,5],[0,7],[4,7],[4,0]],"edges":[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,0]],"neighborOrigin":0,"pointInPolygon":[3,3]},{"title":"testcase7","description":"Non-convex shape to test point in polygon. Point is inside polygon, but co-linear with an edge","vertices":[[1,0],[1,1],[3,2],[3,4],[0,5],[0,7],[4,7],[4,0]],"edges":[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,0]],"neighborOrigin":0,"pointInPolygon":[3,6]}]')}},[[19,1,2]]]);
//# sourceMappingURL=main.3c511a21.chunk.js.map